#input {
#  pipeline { address => filterGeoip }
#}
filter {
###
# ECS conversions
###
# destination.geo.asn        rename ->   destination.as.number
# destination.geo.as_org      rename ->   destination.as.organization.name
# destination.geo.country_code2    rename ->  destination.geo.country_iso_code
# destination.geo.continent_code   translate ->   destination.geo.continent_name
# destination.geo.region_code    Combine ->  destination.geo.region_iso_code
#   combine with %{[desination][geo][country_iso_code]}-%{[destination][geo][region_code]}
# destination.geo.continent_code   delete
# destination.geo.country_code3    delete
# destination.geo.logitude      delete
# destination.geo.latitude      delete
# destination.geo.ip        delete
  if [client][geoip_lookup]  {
    geoip {
      id => "GeoIP - client.geoip_lookup - geoip - City"
      source => "[client][geoip_lookup]"
      target => "[client][geo]"
      cache_size => 250000
      database => "C:\ELK\Logstash\GeoLite2-City_20190528\GeoLite2-City.mmdb"
    add_tag => "filterGeoip-client"
    }
    geoip {
      id => "GeoIP - client.geoip_lookup - geoip - ASN"
      source => "[client][geoip_lookup]"
      target => "[client][geo]"
      cache_size => 250000
      database => "C:\ELK\Logstash\GeoLite2-ASN_20190528\GeoLite2-ASN.mmdb"
    }
    
    translate {
      id => "GeoIP - client.geoip_lookup - translate - continent"
      field => "[client][geo][continent_code]"
      destination => "[client][geo][continent_name]"
      dictionary_path => "C:\ELK\logstash\Continent_Code.csv"
      fallback => "Not Found"
    }
    mutate {
      id => "GeoIP - client.geoip_lookup - mutate - ECS rename and remove"
      rename => { 
        "[client][geo][asn]" => "[client][as][number]" 
        "[client][geo][as_org]" => "[client][as][organization][name]" 
        "[client][geo][country_code2]" => "[client][geo][country_iso_code]"
      }
      remove_field => [ "[client][geoip_lookup]", "[client][geo][country_code3]", "[client][geo][continent_code]", "[client][geo][longitude]", "[client][geo][latitude]", "[client][geo][ip]"]
    }
    if [client][geo][country_iso_code] and [client][geo][region_code] {
      mutate {
        id => "GeoIP - client.geoip_lookup - mutate - ECS - region_iso_code"
        add_field => { "[client][geo][region_iso_code]" => "%{[client][geo][country_iso_code]}-%{[client][geo][region_code]}" }
      }
    }
  }
  if [destination][geoip_lookup]  {
    geoip {
      id => "GeoIP - destination.geoip_lookup - geoip - City"
      source => "[destination][geoip_lookup]"
      target => "[destination][geo]"
      cache_size => 250000
      database => "C:\ELK\Logstash\GeoLite2-City_20190528\GeoLite2-City.mmdb"
    add_tag => "filterGeoip-destination"
    }
    geoip {
      id => "GeoIP - destination.geoip_lookup - geoip - ASN"
      source => "[destination][geoip_lookup]"
      target => "[destination][geo]"
      cache_size => 250000
      database => "C:\ELK\Logstash\GeoLite2-ASN_20190528\GeoLite2-ASN.mmdb"
    }
    translate {
      id => "GeoIP - desination.geoip_lookup - translate - continent"
      field => "[destination][geo][continent_code]"
      destination => "[destination][geo][continent_name]"
      dictionary_path => "C:\ELK\logstash\Continent_Code.csv"
      fallback => "Not Found"
    }
    mutate {
      id => "GeoIP - desination.geoip_lookup - mutate - ECS rename and remove"
      rename => { 
        "[destination][geo][asn]" => "[destination][as][number]" 
        "[destination][geo][as_org]" => "[destination][as][organization][name]" 
        "[destination][geo][country_code2]" => "[destination][geo][country_iso_code]"
      }
      remove_field => [ "[destination][geoip_lookup]", "[destination][geo][country_code3]", "[destination][geo][continent_code]", "[destination][geo][longitude]", "[destination][geo][latitude]", "[destination][geo][ip]"]
    }
    if [destination][geo][country_iso_code] and [destination][geo][region_code] {
      mutate {
        id => "GeoIP - desination.geoip_lookup - mutate - ECS - region_iso_code"
        add_field => { "[destination][geo][region_iso_code]" => "%{[destination][geo][country_iso_code]}-%{[destination][geo][region_code]}" }
      }
    }
  }
  if [host][geoip_lookup]  {
    geoip {
      id => "GeoIP - host.geoip_lookup - geoip - City"
      source => "[host][geoip_lookup]"
      target => "[host][geo]"
      cache_size => 250000
      database => "C:\ELK\Logstash\GeoLite2-City_20190528\GeoLite2-City.mmdb"
    add_tag => "filterGeoip-host"
    }
    geoip {
      id => "GeoIP - host.geoip_lookup - geoip - ASN"
      source => "[host][geoip_lookup]"
      target => "[host][geo]"
      cache_size => 250000
      database => "C:\ELK\Logstash\GeoLite2-ASN_20190528\GeoLite2-ASN.mmdb"
    }
    translate {
      id => "GeoIP - host.geoip_lookup - translate - continent"
      field => "[host][geo][continent_code]"
      destination => "[host][geo][continent_name]"
      dictionary_path => "C:\ELK\logstash\Continent_Code.csv"
      fallback => "Not Found"
    }
    mutate {
      id => "GeoIP - host.geoip_lookup - mutate - ECS rename and remove"
      rename => { 
        "[host][geo][asn]" => "[host][as][number]" 
        "[host][geo][as_org]" => "[host][as][organization][name]" 
        "[host][geo][country_code2]" => "[host][geo][country_iso_code]"
      }
      remove_field => [ "[host][geoip_lookup]", "[host][geo][country_code3]", "[host][geo][continent_code]", "[host][geo][longitude]", "[host][geo][latitude]", "[host][geo][ip]"]
    }
    if [host][geo][country_iso_code] and [host][geo][region_code] {
      mutate {
        id => "GeoIP - host.geoip_lookup - mutate - ECS - region_iso_code"
        add_field => { "[host][geo][region_iso_code]" => "%{[host][geo][country_iso_code]}-%{[host][geo][region_code]}" }
      }
    }
  }
  if [observer][geoip_lookup]  {
    geoip {
      id => "GeoIP - observer.geoip_lookup - geoip - City"
      source => "[observer][geoip_lookup]"
      target => "[observer][geo]"
      cache_size => 250000
      database => "C:\ELK\Logstash\GeoLite2-City_20190528\GeoLite2-City.mmdb"
    add_tag => "filterGeoip-observer"
    }
    geoip {
      id => "GeoIP - observer.geoip_lookup - geoip - ASN"
      source => "[observer][geoip_lookup]"
      target => "[observer][geo]"
      cache_size => 250000
      database => "C:\ELK\Logstash\GeoLite2-ASN_20190528\GeoLite2-ASN.mmdb"
    }
    translate {
      id => "GeoIP - observer.geoip_lookup - translate - continent"
      field => "[observer][geo][continent_code]"
      destination => "[observer][geo][continent_name]"
      dictionary_path => "C:\ELK\logstash\Continent_Code.csv"
      fallback => "Not Found"
    }
    mutate {
      id => "GeoIP - observer.geoip_lookup - mutate - ECS rename and remove"
      rename => { 
        "[observer][geo][asn]" => "[observer][as][number]" 
        "[observer][geo][as_org]" => "[observer][as][organization][name]" 
        "[observer][geo][country_code2]" => "[observer][geo][country_iso_code]"
      }
      remove_field => [ "[observer][geoip_lookup]", "[observer][geo][country_code3]", "[observer][geo][continent_code]", "[observer][geo][longitude]", "[observer][geo][latitude]", "[observer][geo][ip]"]
    }
    if [observer][geo][country_iso_code] and [observer][geo][region_code] {
      mutate {
        id => "GeoIP - observer.geoip_lookup - mutate - ECS - region_iso_code"
        add_field => { "[observer][geo][region_iso_code]" => "%{[observer][geo][country_iso_code]}-%{[observer][geo][region_code]}" }
      }
    }
  }
  if [server][geoip_lookup]  {
    geoip {
      id => "GeoIP - server.geoip_lookup - geoip - City"
      source => "[server][geoip_lookup]"
      target => "[server][geo]"
      cache_size => 250000
      database => "C:\ELK\Logstash\GeoLite2-City_20190528\GeoLite2-City.mmdb"
    add_tag => "filterGeoip-server"
    }
    geoip {
      id => "GeoIP - server.geoip_lookup - geoip - ASN"
      source => "[server][geoip_lookup]"
      target => "[server][geo]"
      cache_size => 250000
      database => "C:\ELK\Logstash\GeoLite2-ASN_20190528\GeoLite2-ASN.mmdb"
    }
    translate {
      id => "GeoIP - server.geoip_lookup - translate - continent"
      field => "[server][geo][continent_code]"
      destination => "[server][geo][continent_name]"
      dictionary_path => "C:\ELK\logstash\Continent_Code.csv"
      fallback => "Not Found"
    }
    mutate {
      id => "GeoIP - server.geoip_lookup - mutate - ECS rename and remove"
      rename => { 
        "[server][geo][asn]" => "[server][as][number]" 
        "[server][geo][as_org]" => "[server][as][organization][name]" 
        "[server][geo][country_code2]" => "[server][geo][country_iso_code]"
      }
      remove_field => [ "[server][geoip_lookup]", "[server][geo][country_code3]", "[server][geo][continent_code]", "[server][geo][longitude]", "[server][geo][latitude]", "[server][geo][ip]"]
    }
    if [server][geo][country_iso_code] and [server][geo][region_code] {
      mutate {
        id => "GeoIP - server.geoip_lookup - mutate - ECS - region_iso_code"
        add_field => { "[server][geo][region_iso_code]" => "%{[server][geo][country_iso_code]}-%{[server][geo][region_code]}" }
      }
    }
  }
  if [source][geoip_lookup]  {
    geoip {
      id => "GeoIP - source.geoip_lookup - geoip - City"
      source => "[source][geoip_lookup]"
      target => "[source][geo]"
      cache_size => 250000
      database => "C:\ELK\Logstash\GeoLite2-City_20190528\GeoLite2-City.mmdb"
    add_tag => "filterGeoip-source"
    }
    geoip {
      id => "GeoIP - source.geoip_lookup - geoip - ASN"
      source => "[source][geoip_lookup]"
      target => "[source][geo]"
      cache_size => 250000
      database => "C:\ELK\Logstash\GeoLite2-ASN_20190528\GeoLite2-ASN.mmdb"
    }
    translate {
      id => "GeoIP - source.geoip_lookup - translate - continent"
      field => "[source][geo][continent_code]"
      destination => "[source][geo][continent_name]"
      dictionary_path => "C:\ELK\logstash\Continent_Code.csv"
      fallback => "Not Found"
    }
    mutate {
      id => "GeoIP - source.geoip_lookup - mutate - ECS rename and remove"
      rename => { 
        "[source][geo][asn]" => "[source][as][number]" 
        "[source][geo][as_org]" => "[source][as][organization][name]" 
        "[source][geo][country_code2]" => "[source][geo][country_iso_code]"
      }
      remove_field => [ "[source][geoip_lookup]", "[source][geo][country_code3]", "[source][geo][continent_code]", "[source][geo][longitude]", "[source][geo][latitude]", "[source][geo][ip]"]
    }
    if [source][geo][country_iso_code] and [source][geo][region_code] {
      mutate {
        id => "GeoIP - source.geoip_lookup - mutate - ECS - region_iso_code"
        add_field => { "[source][geo][region_iso_code]" => "%{[source][geo][country_iso_code]}-%{[source][geo][region_code]}" }
      }
    }
  }
}
#output {
#  pipeline { send_to => [filterDns] }
#}

