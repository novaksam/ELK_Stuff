#input {
#  pipeline { address => filterECS }
#}
filter {
  ########################
  # ECS WORK
  ########################
  ###
  # Host ECS
  ###
  if [host] =~ /^[0-9.]+$/ {
    # Handles IP based names (though not IPv6)
    if ![observer][ip] {
      mutate {
        id => "ECS - Mutate - Copy - host -> observer.ip"
        add_field => ["[observer][ip]", "%{host}" ]
        #copy => { "[host]" => "[observer][ip]" }
        #copy => { "[host]" => "[observer][ip_dns]" }
      }
    }
    mutate {
      id => "ECS - Mutate - Remove - host (ip)"
      remove_field => [ "host" ]
    }
    mutate {
      id => "ECS - Mutate - Rename - observer.ip -> host.ip"
      rename => { 
        "[observer][ip]" => "[host][ip]"
        "[observer][ip_dns]" => "[host][ip_dns]"
      }
    }
  }
  
  if [host] =~ /^[0-9.A-Za-z_\-]+$/ {
    # Handles hostname based names
    if ![observer][hostname] {
      mutate {
        id => "ECS - Mutate - Copy - host -> observer.hostname"
        add_field => ["[observer][hostname]", "%{host}" ]
        #copy => { "[host]" => "[observer][hostname]" }
        #copy => { "[host]" => "[observer][name_dns]" }
      }
    }
    mutate {
      id => "ECS - Mutate - Remove - host (hostname)"
      remove_field => [ "host" ]
    }
  } 
  
  #else if [host] and ![host][name] {
    # handles everything else
  #  if ![observer][name] {
  #    mutate {
  #      id => "ECS - Mutate - Copy - host -> observer.name"
  #      copy => { "[host]" => "[observer][name]" }
  #    }
  #  }
  #  mutate {
  #    id => "ECS - Mutate - Remove - host (name)"
  #    remove_field => [ "host" ]
  #  }
  #}
  
  #if([host]) {
  #  mutate {
  #    remove_field => [ "host"]
  #  }
  #}
  
  
  ###
  # ECS Hostname case correction
  ###
  if [host][hostname] {
    # I've seen cases where the FQDN comes in caps lock
    # So we'll lowercase it here to simply the regex
    mutate {
      id => "ECS - Mutate - Lowercase - host.hostname"
      lowercase => [ "[host][hostname]" ]
    }
    # Make sure the hostname ends with com, otherwise we add it
    if [host][hostname] !~ /com$/ {
      mutate {
        id => "ECS - Mutate - Replace - host.hostname domain ending"
        replace => { "[host][hostname]" => "%{[host][hostname]}.example.com" }
      }
    }
  }
  if [observer][hostname] {
    # I've seen cases where the FQDN comes in caps lock
    # So we'll lowercase it here to simply the regex
    mutate {
      id => "ECS - Mutate - Lowercase - observer.hostname"
      lowercase => [ "[observer][hostname]" ]
    }
    # Make sure the hostname ends with com, otherwise we add it
    if [observer][hostname] !~ /com$/ {
      mutate {
        id => "ECS - Mutate - Replace - observer.hostname domain ending"
        replace => { "[observer][hostname]" => "%{[observer][hostname]}.example.com" }
      }
    }
  }
  
    # Copy the hostname to the host field, for SIEM integration
  #  if ![host][name] {
  #    mutate {
  #      id => "ECS - Mutate - Copy - observer.hostname -> host.name"
  #      copy => { "[observer][hostname]" => "[host][name]" }
  #      copy => { "[observer][hostname]" => "[host][name_dns]" }
  #    }
  #  }
  #}
  
  if [observer][ip] and ![host][ip] {
    mutate {
      id => "ECS - Mutate - Copy - observer.ip -> host.ip"
      copy => { "[observer][ip]" => "[host][ip]" }
    }
  }
  
  if [observer][hostname] and ![host][hostname] {
    mutate {
      id => "ECS - Mutate - Copy - observer.hostname -> host.hostname"
      copy => { "[observer][hostname]" => "[host][hostname]" }
    }
  }
  
  
  if [host][ip] and ![host][hostname] {
    mutate {
      id => "ECS - Mutate - Copy - host.ip -> host.ip_dns"
      copy => { "[host][ip]" => "[host][ip_dns]" }
    }
  }
  
  if [host][hostname] and ![host][ip] {
    mutate {
      id => "ECS - Mutate - Copy - host.hostname -> host.name_dns"
      copy => { "[host][hostname]" => "[host][name_dns]" }
    }
  }
  
  ### 
  # Event ECS
  ###
  if [event][action] {
    mutate {
      id => "ECS - Mutate - Lowercase - event.action"
      lowercase => [ "[event][action]" ]
    }
  }
  
  
  ###
  # Log ECS
  ###
  syslog_pri { }
  if [syslog_facility] {
    mutate {
      id => "ECS - Mutate - Rename - Syslog"
      rename => { 
        "[syslog_facility]" => "[log][syslog][facility][name]"
        "[syslog_facility_code]" => "[log][syslog][facility][code]"
        "[syslog_severity]" => "[log][syslog][severity][name]"
        "[syslog_severity_code]" => "[log][syslog][severity][code]"
        "[syslog_pri]" => "[log][syslog][priority]"
      }
    }
  }
  
  if [facility_label] {
    mutate {
      id => "ECS - Mutate - Rename - Syslogline"
      # Browser UA
      rename => { 
        "[facility_label]" => "[log][syslog][facility][name]"
        "[facility]" => "[log][syslog][facility][code]"
        "[severity_label]" => "[log][syslog][severity][name]"
        "[severity]" => "[log][syslog][severity][code]"
        "[priority]" => "[log][syslog][priority]"
      }
    }
  }
  
  ###
  # Process ECS
  ###
  if [program] {
    mutate {
      id => "ECS - Mutate - Rename - Process"
      rename => { 
        "[program]" => "[process][name]"
        "[pid]" => "[process][pid]" 
      }
    }
  }
  
  ###
  # Time ECS
  ###
  if [syslog_timestamp] {
    date {
      id => "ECS - Date - syslog_timestamp - Deprecated"
      locale => "en"
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
      target => "@timestamp"
      remove_field => "syslog_timestamp"
    }
  }
  
  if [timestamp] {
    # 2017-02-13 11:23:55
    date {
      id => "ECS - Date - timestamp - Deprecated"
      match => [ "timestamp", "yyyy-MM-dd HH:mm:ss", "yyyy-MM-d HH:mm:ss", "MMM  d HH:mm:ss", "ISO8601" ]
      target => "@timestamp"
      remove_field => "timestamp"
    }
  }
  
  if [received_at] {
    if ![event][created] {
      date {
        id => "ECS - Date - received_at -> event.created"
        match => [ "[received_at]", "MMM dd yyyy HH:mm:ss", "yyyy-MM-dd HH:mm:ss", "yyyy-MM-d HH:mm:ss", "MMM  d HH:mm:ss", "ISO8601", "EEE MMM dd HH:mm:ss yyyy"]
        target => "[event][created]"
        #timezone => "America/Chicago"
      }
    }
    mutate {
      id => "ECS - Mutate - Remove - received_at"
      remove_field => [ "[received_at]" ]
    }
  }
}
#output {
#  pipeline { send_to => [filterGeoip] }
#}